import React from 'react';
import DoctorsDashGrafOne from './DoctorsDashGrafOne';
import DoctorsDashGrafTwo from './DoctorsDashGrafTwo';
import DoctorsInfoBlock from './DoctorsInfoBlock';
  let date = {
      'year': [2019, 2020, 2021],
      'month': ['Все месяца', "Январь", "Февраль", "Март", "Апрель", "Май", "Июнь", "Июль", "Август", "Сентябрь", "Октябрь", "Ноябрь", "Декабрь"]
  }
  let doctorsSumFact = {
    "Аллергология": {
        "Иванов Сергей Петрович": {
            "2019": {
                "Все месяца": [25500, 11900, 7800, 12000, 10000, 15600, 13300, 14000, 9200, 11000, 7800, 10000]
            },
            "2020": {
                "Все месяца": [25500, 11900, 7800, 12000, 10000, 15600, 13300, 14000, 9200, 11000, 7800, 10000]
            },
            "2021": {
                "Все месяца": [25500, 11900, 7800, 12000, 10000, 15600, 13300, 14000, 9200, 11000, 7800, 10000]
            }
        }
    },
    "Анестезиология": {
        "Семенов Артур Кагерманович": {
            "2019": {
                "Все месяца": [6000, 9600, 5400, 5000, 7900, 10000, 9000, 15000, 11900, 10500, 8300, 9000]
            },
            "2020": {
                "Все месяца": [6000, 9600, 5400, 5000, 7900, 10000, 9000, 15000, 11900, 10500, 8300, 9000]
            },
            "2021": {
                "Все месяца": [6000, 9600, 5400, 5000, 7900, 10000, 9000, 15000, 11900, 10500, 8300, 9000]
            }
        }
    },
    "Гастроэнтерология": {
        "Петров Ярослав Александрович": {
            "2019": {
                "Все месяца": [28000, 23600, 19000, 21500, 27200, 20000, 17300, 23000, 26700, 21000, 25500, 19200]
            },
            "2020": {
                "Все месяца": [28000, 23600, 19000, 21500, 27200, 20000, 17300, 23000, 26700, 21000, 25500, 19200]
            },
            "2021": {
                "Все месяца": [28000, 23600, 19000, 21500, 27200, 20000, 17300, 23000, 26700, 21000, 25500, 19200]
            }
        },
        "Русланбеков Сулеман Абубакарович": {
            "2019": {
                "Все месяца": [16000, 13500, 13900, 11200, 19400, 13000, 9000, 8500, 10900, 7500, 16000, 15000]
            },
            "2020": {
                "Все месяца": [16000, 13500, 13900, 11200, 19400, 13000, 9000, 8500, 10900, 7500, 16000, 15000]
            },
            "2021": {
                "Все месяца": [16000, 13500, 13900, 11200, 19400, 13000, 9000, 8500, 10900, 7500, 16000, 15000]
            }
        },
        "Сергеев Дмитрий Петрович": {
            "2019": {
                "Все месяца": [5600, 7000, 7900, 10000, 13800, 9000, 9000, 13000, 11300, 9200, 10500, 16000]
            },
            "2020": {
                "Все месяца": [5600, 7000, 7900, 10000, 13800, 9000, 9000, 13000, 11300, 9200, 10500, 16000]
            },
            "2021": {
                "Все месяца": [5600, 7000, 7900, 10000, 13800, 9000, 9000, 13000, 11300, 9200, 10500, 16000]
            }
        },
        "Николаев Захар Мирославович": {
            "2019": {
                "Все месяца": [32000, 27900, 29100, 25000, 30600, 24200, 26700, 21000, 20000, 24800, 23000, 20000]
            },
            "2020": {
                "Все месяца": [32000, 27900, 29100, 25000, 30600, 24200, 26700, 21000, 20000, 24800, 23000, 20000]
            },
            "2021": {
                "Все месяца": [32000, 27900, 29100, 25000, 30600, 24200, 26700, 21000, 20000, 24800, 23000, 20000]
            }
        },
        "Жавлатханов Эми Абдурахманович": {
            "2019": {
                "Все месяца": [13000, 8000, 8900, 10500, 12600, 16000, 21000, 15000, 13000, 15000, 9800, 11000]
            },
            "2020": {
                "Все месяца": [13000, 8000, 8900, 10500, 12600, 16000, 21000, 15000, 13000, 15000, 9800, 11000]
            },
            "2021": {
                "Все месяца": [13000, 8000, 8900, 10500, 12600, 16000, 21000, 15000, 13000, 15000, 9800, 11000]
            }
        }
    }
};
  let doctorsPatFact = {
    "Аллергология": {
        "Иванов Сергей Петрович": {
            "2019": {
                "Все месяца": [12, 17, 6, 9, 23, 14, 4, 12, 19, 10, 17, 8]
            },
            "2020": {
                "Все месяца": [12, 17, 6, 9, 23, 14, 4, 12, 19, 10, 17, 8]
            },
            "2021": {
                "Все месяца": [12, 17, 6, 9, 23, 14, 4, 12, 19, 10, 17, 8]
            }
        }
    },
    "Анестезиология": {
        "Семенов Артур Кагерманович": {
            "2019": {
                "Все месяца": [23, 14, 16, 11, 7, 13, 18, 9, 11, 15, 10, 3]
            },
            "2020": {
                "Все месяца": [23, 14, 16, 11, 7, 13, 18, 9, 11, 15, 10, 3]
            },
            "2021": {
                "Все месяца": [23, 14, 16, 11, 7, 13, 18, 9, 11, 15, 10, 3]
            }
        }
    },
    "Гастроэнтерология": {
        "Петров Ярослав Александрович": {
            "2019": {
                "Все месяца": [13, 7, 3, 6, 4, 8, 11, 10, 6, 8, 12, 9]
            },
            "2020": {
                "Все месяца": [13, 7, 3, 6, 4, 8, 11, 10, 6, 8, 12, 9]
            },
            "2021": {
                "Все месяца": [13, 7, 3, 6, 4, 8, 11, 10, 6, 8, 12, 9]
            }
        },
        "Русланбеков Сулеман Абубакарович": {
            "2019": {
                "Все месяца": [24, 19, 23, 20, 13, 18, 16, 21, 26, 20, 19, 22]
            },
            "2020": {
                "Все месяца": [24, 19, 23, 20, 13, 18, 16, 21, 26, 20, 19, 22]
            },
            "2021": {
                "Все месяца": [24, 19, 23, 20, 13, 18, 16, 21, 26, 20, 19, 22]
            }
        },
        "Сергеев Дмитрий Петрович": {
            "2019": {
                "Все месяца": [4, 7, 3, 8, 11, 5, 9, 14, 8, 8, 6, 9]
            },
            "2020": {
                "Все месяца": [4, 7, 3, 8, 11, 5, 9, 14, 8, 8, 6, 9]
            },
            "2021": {
                "Все месяца": [4, 7, 3, 8, 11, 5, 9, 14, 8, 8, 6, 9]
            }
        },
        "Николаев Захар Мирославович": {
            "2019": {
                "Все месяца": [7, 11, 2, 5, 11, 14, 8, 11, 10, 13, 11, 10]
            },
            "2020": {
                "Все месяца": [7, 11, 2, 5, 11, 14, 8, 11, 10, 13, 11, 10]
            },
            "2021": {
                "Все месяца": [7, 11, 2, 5, 11, 14, 8, 11, 10, 13, 11, 10]
            }
        },
        "Жавлатханов Эми Абдурахманович": {
            "2019": {
                "Все месяца": [21, 16, 19, 14, 18, 23, 20, 21, 17, 22, 20, 15]
            },
            "2020": {
                "Все месяца": [21, 16, 19, 14, 18, 23, 20, 21, 17, 22, 20, 15]
            },
            "2021": {
                "Все месяца": [21, 16, 19, 14, 18, 23, 20, 21, 17, 22, 20, 15]
            }
        }
    }
}
  let doctorsSumPlan = {
    "Аллергология": {
        "Иванов Сергей Петрович": {
            "2019": {
                "Все месяца": [25000, 10000, 5000, 10000, 8000, 15000, 15000, 20000, 15000, 10000, 10000, 7000]
            },
            "2020": {
                "Все месяца": [25000, 10000, 5000, 10000, 8000, 15000, 15000, 20000, 15000, 10000, 10000, 7000]
            },
            "2021": {
                "Все месяца": [25000, 10000, 5000, 10000, 8000, 15000, 15000, 20000, 15000, 10000, 10000, 7000]
            }
        }
    },
    "Анестезиология": {
        "Семенов Артур Кагерманович": {
            "2019": {
                "Все месяца": [5000, 10000, 5000, 5000, 8000, 8000, 10000, 15000, 10000, 8000, 8000, 10000]
            },
            "2020": {
                "Все месяца": [5000, 10000, 5000, 5000, 8000, 8000, 10000, 15000, 10000, 8000, 8000, 10000]
            },
            "2021": {
                "Все месяца": [5000, 10000, 5000, 5000, 8000, 8000, 10000, 15000, 10000, 8000, 8000, 10000]
            }
        }
    },
    "Гастроэнтерология": {
        "Петров Ярослав Александрович": {
            "2019": {
                "Все месяца": [25000, 20000, 15000, 25000, 30000, 20000, 20000, 25000, 18000, 18000, 25000, 20000]
            },
            "2020": {
                "Все месяца": [25000, 20000, 15000, 25000, 30000, 20000, 20000, 25000, 18000, 18000, 25000, 20000]
            },
            "2021": {
                "Все месяца": [25000, 20000, 15000, 25000, 30000, 20000, 20000, 25000, 18000, 18000, 25000, 20000]
            }
        },
        "Русланбеков Сулеман Абубакарович": {
            "2019": {
                "Все месяца": [15000, 15000, 10000, 8000, 15000, 10000, 7000, 7000, 10000, 7000, 15000, 15000]
            },
            "2020": {
                "Все месяца": [15000, 15000, 10000, 8000, 15000, 10000, 7000, 7000, 10000, 7000, 15000, 15000]
            },
            "2021": {
                "Все месяца": [15000, 15000, 10000, 8000, 15000, 10000, 7000, 7000, 10000, 7000, 15000, 15000]
            }
        },
        "Сергеев Дмитрий Петрович": {
            "2019": {
                "Все месяца": [5000, 5000, 8000, 8000, 15000, 6000, 6000, 10000, 10000, 14000, 14000, 14000]
            },
            "2020": {
                "Все месяца": [5000, 5000, 8000, 8000, 15000, 6000, 6000, 10000, 10000, 14000, 14000, 14000]
            },
            "2021": {
                "Все месяца": [5000, 5000, 8000, 8000, 15000, 6000, 6000, 10000, 10000, 14000, 14000, 14000]
            }
        },
        "Николаев Захар Мирославович": {
            "2019": {
                "Все месяца": [30000, 30000, 25000, 25000, 28000, 22000, 22000, 22000, 20000, 20000, 28000, 28000]
            },
            "2020": {
                "Все месяца": [30000, 30000, 25000, 25000, 28000, 22000, 22000, 22000, 20000, 20000, 28000, 28000]
            },
            "2021": {
                "Все месяца": [30000, 30000, 25000, 25000, 28000, 22000, 22000, 22000, 20000, 20000, 28000, 28000]
            }
        },
        "Жавлатханов Эми Абдурахманович": {
            "2019": {
                "Все месяца": [10000, 8000, 8000, 12000, 12000, 18000, 18000, 18000, 10000, 10000, 10000, 10000]
            },
            "2020": {
                "Все месяца": [10000, 8000, 8000, 12000, 12000, 18000, 18000, 18000, 10000, 10000, 10000, 10000]
            },
            "2021": {
                "Все месяца": [10000, 8000, 8000, 12000, 12000, 18000, 18000, 18000, 10000, 10000, 10000, 10000]
            }
        }
    }
};
  let doctorsPatPlan = {
    "Аллергология": {
        "Иванов Сергей Петрович": {
            "2019": {
                "Все месяца": [15, 14, 8, 11, 15, 9, 11, 9, 23, 8, 14, 5]
            },
            "2020": {
                "Все месяца": [15, 14, 8, 11, 15, 9, 11, 9, 23, 8, 14, 5]
            },
            "2021": {
                "Все месяца": [15, 14, 8, 11, 15, 9, 11, 9, 23, 8, 14, 5]
            }
        }
    },
    "Анестезиология": {
        "Семенов Артур Кагерманович": {
            "2019": {
                "Все месяца": [18, 10, 15, 15, 8, 10, 15, 12, 15, 15, 8, 8]
            },
            "2020": {
                "Все месяца": [18, 10, 15, 15, 8, 10, 15, 12, 15, 15, 8, 8]
            },
            "2021": {
                "Все месяца": [18, 10, 15, 15, 8, 10, 15, 12, 15, 15, 8, 8]
            }
        }
    },
    "Гастроэнтерология": {
        "Петров Ярослав Александрович": {
            "2019": {
                "Все месяца": [15, 8, 5, 5, 5, 5, 8, 5, 6, 8, 8, 5]
            },
            "2020": {
                "Все месяца": [15, 8, 5, 5, 5, 5, 8, 5, 6, 8, 8, 5]
            },
            "2021": {
                "Все месяца": [15, 8, 5, 5, 5, 5, 8, 5, 6, 8, 8, 5]
            }
        },
        "Русланбеков Сулеман Абубакарович": {
            "2019": {
                "Все месяца": [20, 15, 20, 15, 15, 15, 20, 20, 25, 15, 20, 25]
            },
            "2020": {
                "Все месяца": [20, 15, 20, 15, 15, 15, 20, 20, 25, 15, 20, 25]
            },
            "2021": {
                "Все месяца": [20, 15, 20, 15, 15, 15, 20, 20, 25, 15, 20, 25]
            }
        },
        "Сергеев Дмитрий Петрович": {
            "2019": {
                "Все месяца": [5, 5, 8, 5, 8, 5, 10, 10, 5, 4, 8, 5]
            },
            "2020": {
                "Все месяца": [5, 5, 8, 5, 8, 5, 10, 10, 5, 4, 8, 5]
            },
            "2021": {
                "Все месяца": [5, 5, 8, 5, 8, 5, 10, 10, 5, 4, 8, 5]
            }
        },
        "Николаев Захар Мирославович": {
            "2019": {
                "Все месяца": [5, 10, 5, 5, 6, 8, 10, 8, 10, 8, 10, 15]
            },
            "2020": {
                "Все месяца": [5, 10, 5, 5, 6, 8, 10, 8, 10, 8, 10, 15]
            },
            "2021": {
                "Все месяца": [5, 10, 5, 5, 6, 8, 10, 8, 10, 8, 10, 15]
            }
        },
        "Жавлатханов Эми Абдурахманович": {
            "2019": {
                "Все месяца": [15, 18, 18, 10, 15, 20, 15, 15, 20, 25, 15, 12]
            },
            "2020": {
                "Все месяца": [15, 18, 18, 10, 15, 20, 15, 15, 20, 25, 15, 12]
            },
            "2021": {
                "Все месяца": [15, 18, 18, 10, 15, 20, 15, 15, 20, 25, 15, 12]
            }
        }
    }
}
let BranchesData = {
    "2019": {
        "Аллергология": 23200,
        "Анестезиология": 46800,
        "Гастроэнтерология": 126750
    },
    "2020": {
        "Аллергология": 15500,
        "Анестезиология": 36200,
        "Гастроэнтерология": 99300
        
    },
    "2021": {
        "Аллергология": 13600,
        "Анестезиология": 67900,
        "Гастроэнтерология": 95300        
    }
}
  let GenerallyBranchesFactSum = {
    "Аллергология": {
        "2019": {
            "Все месяца": [37500, 30000, 45000, 39500, 40000, 36800, 32000, 37500, 27000, 31500, 18000, 24700]
        },
        "2020": {
            "Все месяца": [37500, 30000, 45000, 39500, 40000, 36800, 32000, 37500, 27000, 31500, 18000, 24700]
        },
        "2021": {
            "Все месяца": [37500, 30000, 45000, 39500, 40000, 36800, 32000, 37500, 27000, 31500, 18000, 24700]
        }
    },
    "Анестезиология": {
        "2019": {
            "Все месяца": [27000, 31600, 29800, 27500, 24900, 32600, 35000, 37700, 30000, 28300, 23000, 24700]
        },
        "2020": {
            "Все месяца": [27000, 31600, 29800, 27500, 24900, 32600, 35000, 37700, 30000, 28300, 23000, 24700]
        },
        "2021": {
            "Все месяца": [27000, 31600, 29800, 27500, 24900, 32600, 35000, 37700, 30000, 28300, 23000, 24700]
        }
    },
    "Гастроэнтерология": {
        "2019": {
            "Все месяца": [216000, 274000, 245000, 217000, 270000, 239000, 250000, 215000, 317000, 283000, 236000, 270000]
        },
        "2020": {
            "Все месяца": [216000, 274000, 245000, 217000, 270000, 239000, 250000, 215000, 317000, 283000, 236000, 270000]
        },
        "2021": {
            "Все месяца": [216000, 274000, 245000, 217000, 270000, 239000, 250000, 215000, 317000, 283000, 236000, 270000]
        }
    }
}
  let GenerallyBranchesFactPat =  {
    "Аллергология": {
        "2019": {
            "Все месяца": [17, 21, 18, 11, 14, 21, 24,  19, 21, 17, 25, 21]
        },
        "2020": {
            "Все месяца": [17, 21, 18, 11, 14, 21, 24,  19, 21, 17, 25, 21]
        },
        "2021": {
            "Все месяца": [17, 21, 18, 11, 14, 21, 24,  19, 21, 17, 25, 21]
        }
    },
    "Анестезиология": {
        "2019": {
            "Все месяца": [23, 26, 21, 29, 19, 17, 23, 27, 24, 18, 21, 14]
        },
        "2020": {
            "Все месяца": [23, 26, 21, 29, 19, 17, 23, 27, 24, 18, 21, 14]
        },
        "2021": {
            "Все месяца": [23, 26, 21, 29, 19, 17, 23, 27, 24, 18, 21, 14]
        }
    },
    "Гастроэнтерология": {
        "2019": {
            "Все месяца": [156, 134, 142, 107, 97, 114, 136, 112, 97, 83, 108, 125]
        },
        "2020": {
            "Все месяца": [156, 134, 142, 107, 97, 114, 136, 112, 97, 83, 108, 125]
        },
        "2021": {
            "Все месяца": [156, 134, 142, 107, 97, 114, 136, 112, 97, 83, 108, 125]
        }
    }
}
  let GenerallyBranchesPlanSum =  {
    "Аллергология": {
        "2019": {
            "Все месяца": [40000, 30000, 40000, 40000, 40000, 30000, 30000, 35000, 30000, 30000, 15000, 25000]
        },
        "2020": {
            "Все месяца": [40000, 30000, 40000, 40000, 40000, 30000, 30000, 35000, 30000, 30000, 15000, 25000]
        },
        "2021": {
            "Все месяца": [40000, 30000, 40000, 40000, 40000, 30000, 30000, 35000, 30000, 30000, 15000, 25000]
        }
    },
    "Анестезиология": {
        "2019": {
            "Все месяца": [25000, 30000, 30000, 25000, 25000, 28000, 30000, 30000, 30000, 30000, 25000, 25000]
        },
        "2020": {
            "Все месяца": [25000, 30000, 30000, 25000, 25000, 28000, 30000, 30000, 30000, 30000, 25000, 25000]
        },
        "2021": {
            "Все месяца": [25000, 30000, 30000, 25000, 25000, 28000, 30000, 30000, 30000, 30000, 25000, 25000]
        }
    },
    "Гастроэнтерология": {
        "2019": {
            "Все месяца": [200000, 250000, 250000, 200000, 250000, 250000, 250000, 200000, 250000, 250000, 280000, 280000]
        },
        "2020": {
            "Все месяца": [200000, 250000, 250000, 200000, 250000, 250000, 250000, 200000, 250000, 250000, 280000, 280000]
        },
        "2021": {
            "Все месяца": [200000, 250000, 250000, 200000, 250000, 250000, 250000, 200000, 250000, 250000, 280000, 280000]
        }
    }
}
  let GenerallyBranchesPlanPat = {
    "Аллергология": {
        "2019": {
            "Все месяца": [20, 20, 15, 15, 10, 10, 15, 15, 20, 20, 20, 15]
        },
        "2020": {
            "Все месяца": [20, 20, 15, 15, 10, 10, 15, 15, 20, 20, 20, 15]
        },
        "2021": {
            "Все месяца": [20, 20, 15, 15, 10, 10, 15, 15, 20, 20, 20, 15]
        }
    },
    "Анестезиология": {
        "2019": {
            "Все месяца": [20, 20, 25, 25, 15, 15, 20, 20, 20, 15, 15, 15]
        },
        "2020": {
            "Все месяца": [20, 20, 25, 25, 15, 15, 20, 20, 20, 15, 15, 15]
        },
        "2021": {
            "Все месяца": [20, 20, 25, 25, 15, 15, 20, 20, 20, 15, 15, 15]
        }
    },
    "Гастроэнтерология": {
        "2019": {
            "Все месяца": [130, 130, 100, 100, 120, 120, 120, 100, 90, 90, 90, 110]
        },
        "2020": {
            "Все месяца": [130, 130, 100, 100, 120, 120, 120, 100, 90, 90, 90, 110]
        },
        "2021": {
            "Все месяца": [130, 130, 100, 100, 120, 120, 120, 100, 90, 90, 90, 110]
        }
    }
}
  let PlangenerallySum = {
    "2019": {
        "Все месяца": [500000, 500000, 450000, 480000, 430000, 430000, 380000, 400000, 350000, 350000, 380000, 380000]
    },
    "2020": {
        "Все месяца": [350000, 400000, 400000, 380000, 310000, 280000, 300000, 320000, 270000, 300000, 250000, 250000]
    },
    "2021": {
        "Все месяца": [400000, 480000, 410000, 340000, 280000, 320000, 350000, 440000, 300000, 270000, 220000, 260000]
    }
}
  let PlangenerallyPat = {
    "2019": {
        "Все месяца": [250, 300, 250, 250, 200, 200, 230, 180, 180, 260, 260, 220]
    },
    "2020": {
        "Все месяца": [320, 300, 270, 270, 270, 320, 320, 350, 280, 280, 300, 300]
    },
    "2021": {
        "Все месяца": [180, 150, 150, 150, 200, 180, 180, 230, 230, 190, 150, 200]
    }
}
  let FactgenerallySum = {
    "2019": {
        "Все месяца": [467000, 433000, 473000, 449000, 398000, 476000, 358600, 428900, 353000, 347000, 423400, 347000]
    },
    "2020": {
        "Все месяца": [374800, 411000, 452400, 327000, 297700, 287800, 267200, 328000, 252000, 293000, 315700, 257000]
    },
    "2021": {
        "Все месяца": [379200, 491000, 424000, 351600, 263100, 326000, 287000, 397200, 324000, 279000, 247000, 226300]
    }
}
  let FactgenerallyPat = {
    "2019": {
        "Все месяца": [217, 274, 283, 259, 168, 171, 253, 157, 235, 269, 234, 221]
    },
    "2020": {
        "Все месяца": [323, 243, 295, 264, 196, 367, 290, 354, 240, 217, 315, 182]
    },
    "2021": {
        "Все месяца": [151, 192, 156, 128, 238, 155, 183, 196, 211, 240, 150, 213]
    }
}
 
export default class DoctorsDash extends React.Component{
    constructor(props){
        super(props)
        this.state = {branch: 'Все отделения', selyear: '2021', doctor: 'Все врачи', selmonth: 'Все месяца'}
        this.doctorsSumFact = doctorsSumFact;
        this.doctorsPatFact = doctorsPatFact;
        this.doctorsSumPlan = doctorsSumPlan;
        this.doctorsPatPlan = doctorsPatPlan;
        this.date = date;
        this.PlangenerallySum = PlangenerallySum;
        this.FactgenerallySum = FactgenerallySum;
        this.PlangenerallyPat = PlangenerallyPat;
        this.FactgenerallyPat = FactgenerallyPat;
        this.GenerallyBranchesFactSum = GenerallyBranchesFactSum;
        this.GenerallyBranchesFactPat = GenerallyBranchesFactPat;
        this.GenerallyBranchesPlanSum = GenerallyBranchesPlanSum;
        this.GenerallyBranchesPlanPat = GenerallyBranchesPlanPat;
        this.BranchesData = BranchesData;
    }
    BranchesClick = (event) =>{
        if(!event.target.classList.contains('selected')){
            let selectedOn = document.querySelectorAll('.branches__list div')
            for(let i in selectedOn){
                if(selectedOn[i].classList.contains('selected')){
                    selectedOn[i].classList.remove('selected')
                    break;
                }
            }
            let selectedDocOn = document.querySelectorAll('.doctors__list div')
            for(let i in selectedDocOn){
                if(selectedDocOn[i].classList.contains('selected')){
                    selectedDocOn[i].classList.remove('selected')
                    break;
                }
            }
            selectedDocOn[0].classList.add('selected')
            event.target.classList.add('selected');
            this.setState({branch: event.target.innerText, doctor: 'Все врачи'})
        }
    }
    DoctorsSelect = (event) =>{
        
        if(!event.target.classList.contains('selected')){
            let selectedOn = document.querySelectorAll('.doctors__list div')
            for(let i in selectedOn){
                if(selectedOn[i].classList.contains('selected')){
                    selectedOn[i].classList.remove('selected')
                    break;
                }
            }
            event.target.classList.add('selected');
            this.setState({doctor: event.target.innerText})
        }
    }
    SelectYear=(event)=>{
        this.setState({selyear: event.target.value})
        let selectedOn = document.querySelectorAll('.doctors__list div')
        if(!selectedOn[0].classList.contains('selected')){            
            for(let i in selectedOn){
                if(selectedOn[i].classList.contains('selected')){
                    selectedOn[i].classList.remove('selected')
                    break;
                }
            }
            selectedOn[0].classList.add('selected');
            this.setState({selyear: event.target.value, doctor: "Все врачи"})
        }
    }
    SelectMonth=(event)=>{
        let selectedOn = document.querySelectorAll('.doctors__list div')
        if(!selectedOn[0].classList.contains('selected')){            
            for(let i in selectedOn){
                if(selectedOn[i].classList.contains('selected')){
                    selectedOn[i].classList.remove('selected')
                    break;
                }
            }
            selectedOn[0].classList.add('selected');
            this.setState({selmonth: event.target.value, doctor: "Все врачи"})
        }
        
    }
    MaxBuy(BranchesData){
        let maxfact = 0;
        let maxtwo = 0;
        let sred = 0;
        for(let year in BranchesData){
            if(year == this.state.selyear){
                for(let branch in BranchesData[year]){
                    if(maxfact < BranchesData[year][branch]) maxfact = BranchesData[year][branch];
                    sred += BranchesData[year][branch];
                    maxtwo++;
                }
                maxtwo = sred / maxtwo;
            }
        }
        return {maxfact: maxfact, maxtwo: maxtwo}
    }
    render(){
        return(
            <div>
                <div className = 'sidebar'>
                    <div className = 'selects'>
                        <div className='selects__year'>
                            <span>Год: </span>
                            <select className = 'Dash__YearSelect' defaultValue = "2021" onChange={this.SelectYear}>
                            {
                                this.date.year.map((item, index) =>{
                                    return(
                                        <AddOptions date = {item} key = {index}/>
                                    )
                                })
                            }
                        </select>
                        </div>
                        <div className='selects__month displayNone'>
                            <span>Месяц: </span>
                            <select className = 'Dash__MonthSelect' onChange={this.SelectMonth}>
                            {
                                this.date.month.map((item, index) =>{
                                    return(
                                        <AddOptions date = {item} key = {index}/>
                                    )
                                })
                            }
                        </select>
                        </div>
                    </div>
                    <div className ='branches branchesDash'>
                        <div className = 'branches__title'>Отделения</div>
                        <div className = 'branches__list branches__listDash'>
                            <div className = 'branch selected' onClick = {this.BranchesClick}>Все отделения</div>
                            {
                                Object.keys(this.doctorsSumFact).map((item, index) => {
                                    return(
                                        <BranchesList branch = {item} index = {index} func = {this.BranchesClick} key = {index}/>
                                    )
                                })
                            }
                        </div>
                    </div>
                    <div className ='doctors'>
                        <div className = 'doctors__title'>Врачи</div>
                        <div className = 'doctors__list'>
                            <div className = 'doctor selected' onClick = {this.DoctorsSelect}>Все врачи</div>
                            {
                                (this.state.branch == 'Все отделения')?
                                (
                                    Object.keys(this.doctorsSumFact).map(item => {
                                        return(
                                            Object.keys(this.doctorsSumFact[item]).map((it, index) =>{
                                                return(
                                                    <DoctorsList doctors = {Object.keys(this.doctorsSumFact[item][it][this.state.selyear])} selmonth = {this.state.selmonth} doc = {it} index = {index} func = {this.DoctorsSelect} key = {index}/>                            
                                                )
                                            })
                                        )
                                    })
                                 ) :
                                (
                                Object.keys(this.doctorsSumFact[this.state.branch]).map((item, index) =>{
                                    return(
                                        <DoctorsList doctors = {Object.keys(this.doctorsSumFact[this.state.branch][item][this.state.selyear])} selmonth = {this.state.selmonth} doc = {item} index = {index} func = {this.DoctorsSelect} key = {index}/>                            
                                    )                
                                })
                                )
                            }
                        </div>
                    </div>
                </div>
                <div className = 'contentDash'>
                    <div className = 'contentDash__top'>
                    <DoctorsDashGrafOne 
                    state = {this.state} 
                    doctorsPatFact ={this.doctorsPatFact}  
                    doctorsSumFact = {this.doctorsSumFact} 
                    doctorsPatPlan ={this.doctorsPatPlan}  
                    doctorsSumPlan = {this.doctorsSumPlan} 
                    FactgenerallySum = {this.FactgenerallySum} 
                    PlangenerallySum = {this.PlangenerallySum} 
                    FactgenerallyPat = {this.FactgenerallyPat} 
                    PlangenerallyPat = {this.PlangenerallyPat} 
                    GenerallyBranchesFactSum = {this.GenerallyBranchesFactSum}                    
                    GenerallyBranchesFactPat = {this.GenerallyBranchesFactPat}
                    GenerallyBranchesPlanSum = {this.GenerallyBranchesPlanSum}                    
                    GenerallyBranchesPlanPat = {this.GenerallyBranchesPlanPat}
                    />
                    <DoctorsInfoBlock 
                    branch = {this.state.branch} 
                    doctor = {this.state.doctor} 
                    selyear = {this.state.selyear} 
                    selmonth = {this.state.selmonth} />
                    </div>
                    <div className = 'contentDash__bottom'>
                            <DoctorsDashGrafTwo 
                            selyear = {this.state.selyear} 
                            selmonth = {this.state.selmonth} 
                            BranchesData = {this.BranchesData}
                            max = {this.MaxBuy(this.BranchesData)}
                            
                            />
                    </div>
                    
                </div>

            </div>
        )
    }
}

class BranchesList extends React.Component{
    
    render(){
        return(
            <div className = "branch" onClick = {this.props.func}>
                {this.props.branch}
            </div>
        )
    }
}

class DoctorsList extends React.Component{
    
    render(){
        for(let i  of this.props.doctors){
            if(i == this.props.selmonth){
                return(
                    <div className = "doctor" onClick = {this.props.func}>
                        {this.props.doc}
                    </div>
                )
            }
        }
        return null
    }
}

class AddOptions extends React.Component{
    render(){  
        return(
          <option>{this.props.date} </option>
        )                  
      }
    }